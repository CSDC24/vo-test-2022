// Frage 12:

// G... Graph
// V... Vertex
// E... Edge
// w... weight

s = start

function G(V,E,w) {   
    if(V == undefined || E == undefined)
        return
    if(s == undefined)
        return
    if(w != 2)
        G(V, E -> next, w)
    if(V == s)
        return true
    else
        G(V -> next, E, w)
}
return false

while (condition) do
    
end
    
// ALTERNATIVE

searchGraph(G(V,E,w),s):

if s is not in V
 return -1
 else
 return Search(V,s,w)

 Search(V,E,w):

// weiß = nicht besucht, grau = besucht, schwarz = fertig -> alle Kanten erledigt
s = grau


for i < alleausgehendeKanten()
    if w == 2

     if v == t then
         return t
     if v == weiß then
           v = grau
          searchRecursive(G,v,t)
     u = schwarz
